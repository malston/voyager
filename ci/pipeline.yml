resource_types:
  - name: github-release
    type: registry-image
    source:
      repository: concourse/github-release-resource
      tag: latest

resources:
  - name: source-code
    type: git
    source:
      uri: https://github.com/malston/voyager.git
      branch: main
      
  - name: github-release
    type: github-release
    source:
      owner: malston
      repository: voyager
      access_token: ((github_token))

jobs:
  - name: build-and-release
    plan:
      - get: source-code
        trigger: false
      
      - task: build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source: {repository: python, tag: 3.9-slim}
          inputs:
            - name: source-code
          outputs:
            - name: built-release
          params:
            VERSION: ((version))
            BODY: ((release_body))
          run:
            path: sh
            args:
              - -ec
              - |
                cd source-code
                echo "Building version ${VERSION}"
                python -m pip install --upgrade pip
                pip install build twine
                pip install -r requirements.txt
                python -m build
                cp dist/* ../built-release/
                ls -al ../built-release/
                apt-get update -y && apt-get install git -y
                git rev-parse HEAD >../built-release/COMMITISH
                echo "v${VERSION}" >../built-release/release_name.txt
                echo "v${VERSION}" >../built-release/release_tag.txt
                echo "${BODY}" >../built-release/release_body.txt
      
      - put: github-release
        params:
          name: built-release/release_name.txt
          tag: built-release/release_tag.txt
          body: built-release/release_body.txt
          commitish: built-release/COMMITISH
          generate_release_notes: true
          globs: ["built-release/*.tar.gz", "built-release/*.whl"]
